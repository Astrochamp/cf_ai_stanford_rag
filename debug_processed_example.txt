The formal language of propositional logic consists of “atomic” propositional variables, p_1, p_2, p_3, …, and propositional connectives, c_1^1, c_2^1, c_3^1, …, c_1^2, c_2^2, c_3^2, …, c_1^3, …. The expressions’ subscripts are used to distinguish them from one another; the fact that we use natural numbers indicates the typical convention that the vocabulary be countable. The propositional connectives’ superscripts indicate their “arity”, i.e., the number of propositions that they operate on in order to create a new proposition. The formulas of propositional logic are defined recursively by

1. Atomic propositional variables are formulas.
2. If c_n^m is a propositional connective, and ⟨A, B, C, …⟩ is a sequence of m, possibly but not necessarily atomic, possibly but not necessarily distinct, formulas, then the result of applying c_n^m to ⟨A, B, C, …⟩ is a formula.
The result of applying c_n^m to ⟨A, B, C, …⟩ is customarily written in functional notation: c_n^m(A, B, C, …). Examples of formulas are

- p_4
- c_1^2(p_7, p_3)
- c_2^2(c_1^1(p_1), c_1^1(c_1^2(p_2, p_3)))
- c_5^3(p_2, c_3^2(c_4^1(c_6^2(p_3, p_3)), p_5), c_9^1(p_2))
This recursive definition of the formulas of propositional logic justifies the use of the label “atomic” for the propositional variables: Every formula is built up stepwise from atoms through a finite application of propositional connectives. It can be helpful to think of the connectives as “propositional functions” that take propositions (denoted by formulas) as input and return propositions as output. The space of propositions is then given as the free algebra on the atomic formulas generated by these functions, and the specification of a proposition is given by the standard “composition of functions” notation. This terminology is not common, however, because the expression “propositional function” has a quite different use of high currency (see the entry on Bertrand Russell).